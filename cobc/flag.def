/*							-*- c -*-
 * Copyright (C) 2003-2007 Keisuke Nishida
 * Copyright (C) 2007 Roger While
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this software; see the file COPYING.  If not, write to
 * the Free Software Foundation, 51 Franklin Street, Fifth Floor
 * Boston, MA 02110-1301 USA
 */

#include "lib/gettext.h"

/* CB_FLAG (var, name, doc) */

CB_FLAG (cb_flag_trace, "trace",
	 N_("Include trace code in the output"))

CB_FLAG (cb_flag_syntax_only, "syntax-only",
	 N_("Syntax error checking only; don't emit any output"))

CB_FLAG (cb_flag_static_call, "static-call",
	 N_("Output static function calls for the CALL statement"))

CB_FLAG (cb_flag_debugging_line, "debugging-line",
	 N_("Enable debugging lines"))

CB_FLAG (cb_flag_source_location, "source-location",
	 N_("Include source location in the output"))

CB_FLAG (cb_implicit_init, "implicit-init",
	 N_("Do automatic initialization of the Cobol runtime system"))

CB_FLAG (cb_flag_line_directive, "line-directive",
	 N_("Include line directive in the output"))

CB_FLAG (cb_flag_static_linkage, "static-linkage",
	 N_("Statically allocate non-USING LINKAGE parameters"))

CB_FLAG (cb_flag_sign_ascii, "sign-ascii",
	 N_("Numeric display sign ASCII (Default on ASCII machines)"))

CB_FLAG (cb_flag_sign_ebcdic, "sign-ebcdic",
	 N_("Numeric display sign EBCDIC (Default on EBCDIC machines)"))

CB_FLAG (cb_stack_check, "stack-check",
	 N_("PERFORM stack checking (Turned on by -debug or -g)"))

CB_FLAG (cb_notrunc, "notrunc",
	 N_("Do not truncate binary fields according to PIC (ala MF)"))
